@layer utilities, reset, framework, layout, components, animations;

@layer reset {
  :root {
    --animate-duration: 0.3s;
    --text-10: 10px;
    --text-12: 12px;
    --text-14: 14px;
    --text-16: 16px;
    --text-18: 18px;
    --text-20: 20px;
    --text-24: 24px;
    --text-28: 28px;
    --text-32: 32px;
    --text-40: 40px;
    --text-48: 48px;
    --text-56: 56px;
    --color-bg1: rgb(163, 234, 203);
    --color-bg2: rgb(245, 67, 61);
    --color1: 35, 10, 115; /* Darker version of blue/violet */
    --color2: 150, 30, 20; /* Dark red with depth */
    --color3: 70, 180, 150; /* A deep greenish teal */
    --color4: 100, 25, 25; /* Muted red/maroon */
    --color5: 90, 90, 25; /* Deepened mustard/yellow */
    --color-interactive: 60, 255, 140; /* Bright, neon green for interactive elements */
    // --color1: 150, 120, 255; /* Light lavender for softer blue/violet */
    // --color2: 255, 180, 190; /* Blush coral to balance dark red */
    // --color3: 170, 255, 245; /* Mint green for a lighter teal */
    // --color4: 255, 200, 210; /* Soft rose for a warmer touch */
    // --color5: 255, 255, 170; /* Pastel yellow for a brighter mustard */
    --circle-size: 80%;
    --blending: hard-light;

    --cube-size: clamp(200px, 18vw, 300px);
  }

  @media (prefers-reduced-motion: reduce) {
    * {
      animation-duration: 0ms !important;
      animation-timing-function: linear !important;
      animation-delay: 0ms !important;
      transition-duration: 1ms !important;
    }
  }

  * {
    font-display: swap !important;
  }

  html {
    scroll-behavior: smooth;
  }

  body {
    min-height: 100vh;
    min-height: 100dvh;
    font-family:
      Quicksand,
      system-ui,
      -apple-system,
      BlinkMacSystemFont,
      'Segoe UI',
      Roboto,
      Oxygen,
      Ubuntu,
      Cantarell,
      'Open Sans',
      'Helvetica Neue',
      sans-serif;
    @apply bg-neutral-9500;
    isolation: isolate;

    &::before,
    &::after {
      position: fixed;
      content: '';
      width: 100%;
      height: 100%;
    }

    &::before {
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32' width='100' height='100' fill='none' stroke='rgb(255 255 255 / 0.03)'%3e%3cpath d='M0 .5H31.5V32'/%3e%3c/svg%3e");
      z-index: -1;
      opacity: 0.5;
    }

    &::after {
      background-image: url('./assets/images/circle_pattern.png');
      background-size: contain;
      background-repeat: repeat;
      z-index: 1;
      opacity: 0.6;
      background-size: 12px;
    }
  }

  .code-list li::marker {
    @apply text-green;
    content: '<>';
    letter-spacing: 0.125rem;
  }

  section {
    margin-inline: auto;
  }

  .big-text {
    font-size: clamp(var(--text-32), 5vw, var(--text-48)) !important;
  }

  .shadow-text {
    text-shadow: 0.5px 0.5px 6px currentColor;
  }
}

@layer framework {
  .form-section {
    grid-template-columns: max-content min-content;
  }

  .experience-points-lists {
    li {
      @apply pl-8;
    }
    li::marker {
      @apply text-green;
      content: '<>';
    }
  }

  .projects-grid {
    grid-template-columns: repeat(auto-fit, 250px);
  }

  .nav-link {
    &:hover::after {
      transform: scaleX(1);
    }

    &::after {
      content: '';
      position: absolute;
      bottom: 0;
      margin-top: 4px;
      width: 100%;
      height: 2px;
      border: 3px ridge currentColor;
      transform: scaleX(0);
      rotate: 1deg;
      transform-origin: right;
      background-color: currentColor;
      transition: all 0.3s ease-in-out;
      border-bottom-left-radius: 18px;
    }
  }

  .form-grid {
    grid-template-columns: 1fr min-content;

    @media screen and (max-width: 768px) {
      grid-template-columns: 1fr;
    }
  }

  .contact-form-container {
    background-image: url(./assets/images/worldmap.png);
    background-size: contain;
    background-repeat: no-repeat;
    background-position: 50%;
  }

  .alternate {
    animation-direction: alternate;
  }

  .alternate {
    animation-direction: reverse;
  }

  .infinite {
    animation-iteration-count: infinite;
  }

  @for $i from 1 to 20 {
    .animate-delay-#{$i} {
      animation-delay: calc(#{$i} * 0.3s);
    }
  }

  @for $i from 1 to 20 {
    .animate-duration-#{$i} {
      animation-duration: calc(#{$i} * 0.3s);
    }
  }

  .animate-forwards {
    animation-fill-mode: forwards;
  }

  .skill {
    .skill-description {
      position: absolute;
      visibility: hidden;
      opacity: 0;
      bottom: 100%;
      color: white;
      width: 25ch;
      z-index: 10;
      font-size: 12px;
      transition: all 0.3s ease;
      margin-bottom: 0.875rem;
      transform: scale(0.95) translateY(1rem) translateX(-49%);

      &::after {
        --_caret-width: 12px;
        position: absolute;
        z-index: 8;
        bottom: calc((var(--_caret-width) / -2));
        content: '';
        width: var(--_caret-width);
        inset-inline: 50%;
        aspect-ratio: 1;
        rotate: 45deg;
        translate: -50% 0;
        background: inherit;
      }
    }

    &:hover,
    &:focus,
    &:focus-within {
      .skill-description {
        visibility: visible;
        opacity: 1;
        transform: scale(1) translateY(0) translateX(-50%);
      }

      button {
        scale: 1.1;
      }
    }
  }
}

@layer layout {
  .hero-section {
    grid-template-columns: 1fr var(--cube-size);
  }

  @media screen and (max-width: 976px) {
    .hero-section {
      grid-template-columns: 1fr;
      grid-template-rows: max-content 1fr;
      place-items: center;
      place-content: center;
      gap: 4.5rem;
      inset-inline: 0;
    }
  }

  .backdrop {
    position: fixed;
    inset: 0;
    height: 100dvh;
    width: 100dvw;
    z-index: 100;
  }

  .backdrop.colored {
    background: rgba(0, 0, 0, 0.2);
  }
}
